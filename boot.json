{
    "name": "SpiceOfLife",
    "version": "0.1.4",
    "styleFileList": [],
    "scriptFileList": [
        "SoL_base.js"
    ],
    "scriptFileList_earlyload": [
        "earlyload/readData.js"
    ],
    "scriptFileList_inject_early": [
        "injectearly/dataParseScript.js"
    ],
    "tweeFileList": [],
    "imgFileList": [],
    "additionFile": [
        "localization/zh-CN/base.yml",
        "localization/zh-CN/food.yml",
        "localization/en-US/base.yml",
        "localization/en-US/food.yml"
    ],
    "addonPlugin": [{
        "modName": "TweeReplacer",
        "addonName": "TweeReplacerAddon",
        "modVersion": "^1.6.0",
        "params": [{
            "passage": "ShopItem",
            "findString": "<<set _obj to setup.Books.db[$shopitem.item]>>",
            "replace": "<<set _obj to setup.Books.db[$shopitem.item]>><<elseif $shopitem.type is \"SoLItem\">><<set _obj to setup.SoL.items[$shopitem.item]>>"
        }, {
            "passage": "ShopItem",
            "findString": "<<elseif $shopitem.type is \"outfit\">>\n        <<if !$shopitem.targetgender>>",
            "replace": "<<elseif $shopitem.type is \"SoLItem\">><<= _obj.description>><<if setup.SoL.itemHas($shopitem.item)>><<highlight \"small italic\">><<= L('Shop.HaveItem')>><</highlight>><br><</if>><<elseif $shopitem.type is \"outfit\">>\n        <<if !$shopitem.targetgender>>"
        }, {
            "passage": "ShopItem",
            "findString": "<<elseif _obj.inventory>>",
            "replace": "<<elseif _obj.inventory||$shopitem.type is \"SoLItem\">>"
        }, {
            "passage": "InventorySnacks",
            "findString": "<<set _items to Object.keys(V.dormfoodstash)>>",
            "replace": "<<if $SoLLunchItems && $SoLLunchItems.length gt 0>>[[L('SoL.ManageItem')|SoLLunchItemsInventory]]<br><br><</if>><<set _items to Object.keys(V.dormfoodstash)>>"
        }, {
            "passage": "DormFoodStash",
            "findString": "<<for _i to 0; _i lt _items.length; _i++>>",
            "replace": "<<if $SoLLunchItems && $SoLLunchItems.length gt 0>>[[L('SoL.ManageItem')|SoLLunchItemsInventory]]<br><br><</if>><<SoLBoxLinkList>><br><<for _i to 0; _i lt _items.length; _i++>>"
        }, {
            "passage": "DormFoodStash",
            "findString": "<<if _foodobj.cooking>><<set _time to 10>><</if>>",
            "replace": "<<if _foodobj.cooking==-1>><<continue>><</if>><<if _foodobj.cooking>><<set _time to 10>><</if>>"
        }, {
            "passage": "DormFoodStash",
            "findString": "_foodobj[\"restore hunger\"]",
            "replace": "setup.SoL.foodEnergyCalc(_food)"
        }, {
            "passage": "InventorySnacks",
            "findString": "<<for _i to 0; _i lt _items.length; _i++>>",
            "replace": "<<SoLBoxLinkList>><br><<for _i to 0; _i lt _items.length; _i++>>"
        }, {
            "passage": "InventorySnacks",
            "findString": "_foodobj[\"restore hunger\"]",
            "replace": "setup.SoL.foodEnergyCalc(_food)"
        }, {
            "passage": "PhoneMain",
            "findString": "<div class=\"phone-icons nokeys\">",
            "replace": "<<run _icons.push({name: L('SoL.MealRecords'),img: 'ico_phone_foodJournal',dialog:'SoLFoodJournal',wide: true})>><div class=\"phone-icons nokeys\">"
        }, {
            "passage": "GardeningWidgets",
            "findRegex": "<<link .*? GardeningHarvest>>",
            "replace": "<<if !setup.dorm_has('minifridge')>><<link L('Gardening.HarvestDorm') Greenhouse>><<set $pendingharvest to _plot>><<alterneed Relaxation _relax>><<alterneed Rest _rest>><<advtime _time Relaxation>><<run setup.SoL.GardeningHarvestCollect()>><</link>> <<dalterneed Relaxation _relax>> <<dalterneed Rest _rest>><br><</if>><<link L('Gardening.HarvestSale') GardeningHarvest>>"
        }, {
            "passage": "DormFoodStash",
            "findString": "<</for>>",
            "replace": "<</for>><br><<SoLCookwearList>>"
        }, {
            "passage": "SummitMarketInterior",
            "findString": "<<link _link>><<set $shop to \"Campus Quik-Snak\">><</link>>",
            "replace": "<<link _link>><<set $shop to \"Campus Quik-Snak\">><</link>><br><br><<= L('BHHPassageDesc')>><br><<set _link to {text: L('BHHPassageLink'), shop: \"Bai Hui Hall\"}>><<link _link>><<set $shop to \"Bai Hui Hall\">><</link>>"
        }, {
            "passage": "JTUlt",
            "findString": "<<for _dept range Object.keys(_depts)>>",
            "replace": "<<set _depts[L('JT Ult Fresh')] to 'JT Ult Fresh'>><<for _dept range Object.keys(_depts)>>"
        }]
    }, {
        "modName": "ReplacePatcher",
        "addonName": "ReplacePatcherAddon",
        "modVersion": "^1.2.1",
        "params": {
            "js": [{
                "from": "itemobj = setup.Books.db[item];",
                "to": "itemobj = setup.Books.db[item];}else if (type == \"SoLItem\"){itemobj=setup.SoL.items[item];",
                "fileName": "shop.js",
                "all": true
            }, {
                "from": "else if (type == \"books\")\n    {\n        setup.Books.add(item);",
                "to": "else if (type == \"SoLItem\"){setup.SoL.itemPurchase(item);retval += L('Shop.BuyDesc');}else if (type == \"books\")\n    {\n        setup.Books.add(item);",
                "fileName": "shop.js"
            }, {
                "from": "this.increase_need(\"Food\", foodobj[\"restore hunger\"]);",
                "to": "let hunger = setup.SoL.foodEnergyCalc(food);this.increase_need(\"Food\", hunger);setup.SoL.foodHistoryAdd(food, hunger);",
                "fileName": "needs.js"
            }]
        }
    }, {
        "modName": "ImageLoaderHook",
        "addonName": "ImageLoaderAddon",
        "modVersion": "^2.12.1",
        "params": []
    }],
    "dependenceInfo": [{
        "modName": "TweeReplacer",
        "version": "^1.6.0"
    }, {
        "modName": "ModLoader",
        "version": "^2.26.9"
    }, {
        "modName": "ModLoader ImageLoaderHookCore",
        "version": "^2.12.1"
    }]
}